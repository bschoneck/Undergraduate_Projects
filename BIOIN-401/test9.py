#test9.py

#metagenome

# Cloud test 1: 100
metagenome

metagenomes = metagenome.split(",")

UMGS = "ERR589512_bin.12,SRR341713_bin.18,SRR2155351_bin.3,ERR1297740_bin.24,SRR341590_bin.10,ERR1297644_bin.3,SRR1214724_bin.3,SRR5056929_bin.77,ERR1190829_bin.23,SRR5056786_bin.84,ERR525754_bin.18,SRR3737031_bin.16,ERR1293845_bin.21,SRR5558121_bin.15,ERR1912960_bin.3,SRR6028420_bin.13,ERR1297716_bin.14,SRR4481801_bin.34,SRR5127675_bin.13,SRR2992962_bin.4"
UMGS = UMGS.split(",")

fin = open("bwa_coverage.csv", "r")
fout = open("bwa_coverage_test.csv", "w")
lst2 = []
lst = []
for line in fin:
    line.strip('\n')
    temp = line.split(',')
    templst = []
    if temp[0] == "Genome":
        fout.write(temp[0])
        fout.write(",")
        for i in range(len(temp)):
            lst2.append(temp[i])
    if temp[0] in UMGS:
        templst.append(temp[0])
        for i in range(1, len(temp)):
            if lst2[i] in metagenomes:
                templst.append(temp[i])
        lst.append(templst)

for i in lst2:
    if i in metagenomes:
        fout.write(i)
        fout.write(",")

fout.write("\n")

for i in lst:
    for j in i:
        fout.write(j)
        fout.write(",")
    fout.write("\n")
